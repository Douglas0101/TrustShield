# ==============================================================================
# docker-compose.yml - TrustShield Enterprise Grade
# Versão: 10.1.0 (Path Fix)
#
# Otimizações e Melhores Práticas Implementadas:
# - CORREÇÃO: Corrigido o caminho do build do serviço MLflow.
# - Uso de extensões YAML (`x-`) para reduzir duplicação (DRY).
# - Healthchecks robustos e explícitos para todos os serviços.
# - Dependências de serviço baseadas no estado de saúde (`service_healthy`).
# - Gestão de secrets e configurações centralizada e segura.
# ==============================================================================

x-common-settings: &common-settings
  restart: unless-stopped
  networks:
    - trustshield-net

services:
  postgres:
    image: postgres:14-alpine
    container_name: trustshield-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=mlflow
      - POSTGRES_DB=mlflow
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mlflow -d mlflow"]
      interval: 5s
      timeout: 5s
      retries: 10
    <<: *common-settings

  minio:
    image: minio/minio:latest
    container_name: trustshield-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER_FILE=/run/secrets/minio_root_user
      - MINIO_ROOT_PASSWORD_FILE=/run/secrets/minio_root_password
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 2s
      retries: 10
    secrets:
      - minio_root_user
      - minio_root_password
    <<: *common-settings

  create-buckets:
    image: minio/mc:latest
    container_name: trustshield-bucket-creator
    depends_on:
      minio:
        condition: service_healthy
    secrets:
      - minio_root_user
      - minio_root_password
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 $$(cat /run/secrets/minio_root_user) $$(cat /run/secrets/minio_root_password);
      mc ls myminio/mlflow || mc mb myminio/mlflow;
      echo 'Bucket mlflow pronto.';
      exit 0;
      "
    networks:
      - trustshield-net

  mlflow:
    build:
      # O contexto é o diretório atual (docker/)
      context: .
      # *** CORREÇÃO APLICADA AQUI ***
      # O caminho do Dockerfile agora é relativo ao contexto '.'
      dockerfile: mlflow.Dockerfile
    container_name: trustshield-mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID_FILE=/run/secrets/minio_root_user
      - AWS_SECRET_ACCESS_KEY_FILE=/run/secrets/minio_root_password
    command: >
      mlflow server
        --host 0.0.0.0
        --port 5000
        --backend-store-uri postgresql://mlflow:postgres@postgres:5432/mlflow
        --default-artifact-root s3://mlflow/
    depends_on:
      postgres:
        condition: service_healthy
      create-buckets:
        condition: service_completed_successfully
    secrets:
      - minio_root_user
      - minio_root_password
    <<: *common-settings

  trustshield-api:
    build:
      # O contexto é o diretório pai (a raiz do projeto), o que está correto.
      context: ..
      # O caminho do Dockerfile é relativo à raiz do projeto, o que está correto.
      dockerfile: docker/Dockerfile
    container_name: trustshield-api
    ports:
      - "8000:8000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - WAIT_HOSTS=postgres:5432,minio:9000,mlflow:5000
      - WAIT_TIMEOUT=120
    entrypoint: ["/home/trustshield/docker/entrypoint.sh"]
    volumes:
      - ../:/home/trustshield/ # Mapeia todo o projeto para facilitar
    depends_on:
      mlflow:
        condition: service_started
    secrets:
      - minio_root_user
      - minio_root_password
    <<: *common-settings

networks:
  trustshield-net:
    driver: bridge
    name: trustshield-network

volumes:
  postgres_data:
    name: trustshield-postgres-data
  minio_data:
    name: trustshield-minio-data

secrets:
  postgres_password:
    file: ../secrets/postgres_password.txt
  minio_root_user:
    file: ../secrets/minio_root_user.txt
  minio_root_password:
    file: ../secrets/minio_root_password.txt