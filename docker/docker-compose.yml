# docker/docker-compose.yml (Versão Final com criação de bucket idempotente)
services:
  postgres:
    image: postgres:13
    container_name: trustshield-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
      - POSTGRES_DB=mlflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trustshield-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mlflow -d mlflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: trustshield-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - trustshield-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 2s
      retries: 5

  create-buckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin) do echo '... a aguardar pelo minio ...' && sleep 1; done;
      # --- CORREÇÃO APLICADA AQUI (IDEMPOTÊNCIA) ---
      # Verifica se o bucket existe; se não, cria. Evita erros e condições de corrida.
      /usr/bin/mc ls myminio/mlflow || /usr/bin/mc mb myminio/mlflow;
      # --- FIM DA CORREÇÃO ---
      exit 0;
      "
    networks:
      - trustshield-net

  mlflow:
    image: python:3.9-slim
    container_name: trustshield-mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    command: bash -c "pip install mlflow boto3 psycopg2-binary && mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri postgresql://mlflow:mlflow@postgres/mlflow --default-artifact-root s3://mlflow/"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      create-buckets:
        condition: service_completed_successfully
    networks:
      - trustshield-net

  trustshield-trainer:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: trustshield-trainer
    volumes:
      - ../data:/home/trustshield/data
      - ../outputs:/home/trustshield/outputs
      - ../config:/home/trustshield/config
      - ../logs:/home/trustshield/logs
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    depends_on:
      - mlflow
    networks:
      - trustshield-net

networks:
  trustshield-net:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
